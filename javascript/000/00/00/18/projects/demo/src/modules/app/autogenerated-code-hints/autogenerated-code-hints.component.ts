import {ChangeDetectionStrategy, Component, Inject} from '@angular/core';
import {TuiContextWithImplicit, tuiPure} from '@taiga-ui/cdk';
import {POLYMORPHEUS_CONTEXT} from '@tinkoff/ng-polymorpheus';

const HINT_CONTROLLER_SELECTORS = [`tuiHintContent`];

const TEXTFIELD_CONTROLLER_SELECTORS = [
    `tuiTextfieldCleaner`,
    `tuiTextfieldCustomContent`,
    `tuiTextfieldLabelOutside`,
    `tuiTextfieldSize`,
];

const DROPDOWN_CONTROLLER_SELECTORS = [
    `tuiDropdownAlign`,
    `tuiDropdownDirection`,
    `tuiDropdownLimitWidth`,
    `tuiDropdownMinHeight`,
    `tuiDropdownMaxHeight`,
];

@Component({
    templateUrl: `./autogenerated-code-hints.template.html`,
    styleUrls: [`./autogenerated-code-hints.style.less`],
    changeDetection: ChangeDetectionStrategy.OnPush,
})
export class TuiAutoGeneratedCodeHintsComponent {
    constructor(
        @Inject(POLYMORPHEUS_CONTEXT)
        readonly context: TuiContextWithImplicit<string>,
    ) {}

    get code(): string {
        return this.context.$implicit;
    }

    @tuiPure
    shouldShowIcon(code: string): boolean {
        return (
            this.includesHintController(code) ||
            this.includesTextfieldController(code) ||
            this.includesDropdownController(code) ||
            this.includesDataListWrapper(code)
        );
    }

    @tuiPure
    includesHintController(code: string): boolean {
        return HINT_CONTROLLER_SELECTORS.some(selector => code.includes(selector));
    }

    @tuiPure
    includesTextfieldController(code: string): boolean {
        return TEXTFIELD_CONTROLLER_SELECTORS.some(selector => code.includes(selector));
    }

    @tuiPure
    includesDropdownController(code: string): boolean {
        return DROPDOWN_CONTROLLER_SELECTORS.some(selector => code.includes(selector));
    }

    @tuiPure
    includesDataListWrapper(code: string): boolean {
        return code.includes(`<tui-data-list-wrapper`);
    }
}
